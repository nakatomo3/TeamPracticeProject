@startuml
title ゲーム部分クラス図

class Sample{
    + public
    # protected
    - private
    + public()
    # protected()
    - private()
}

class PlayerPrefs {
    - key int "isGyroMode"
    - key int "score"
    - key int "highScore"
    - key float "speed"
    - key string "scores"
}

package Game <<Frame>>{

    package Singleton <<Frame>>{
        class SystemManager << (S,#FF7700)>>{
            - int difficultyRank
            - bool isRunning
            - float whiteLineTimer
            - float SideImageTimer
            - float whiteLineInterval
            + Sprite[] SideImages
            - int sideImageNum
            + bool GetRunning()
            + int GetDifficultyRank()
            + void StopRunning()
            + void StartRunning()
            - void GenerateWhiteLine()
            - void GenerateSideImage()
        }

        class ScoreManager << (S,#FF7700)>>{
            + Text scoreText
            + Text highScoreText
            - int score
            - int highScore
            + void AddScore(int value)
            - void ChangeScoreText()
        }

        class SpeedManager << (S,#FF7700)>>{
            + Text speedText
            + const float ADD_SPEED_INTERVAL
            - float addSpeedTimer
            - float roadSpeed
            - void AddSpeed()
            + float GetSpeed()
        }

        class CarGenerator << (S,#FF7700)>>{
            + GameObject[] cars
            - bool[] hasEnemyLanes
            - float[,] plobabiloties
            - float BASE_SPEEDs
            - void GenerateCar()
        }

        class OptionManager << (S,#FF7700)>>{
            - bool isGyroMode
            - void ChangeGyroMode()
            + bool GetIsGyro()
        }

        class CollisionChecker << (S,#FF7700)>>{
            - GameOverMode gameOverMode
            - void Impact(Car car)
        }

    }

    package Car <<Frame>>{
        class Car{
            # float verticalSpeed
            # int SCORE
            + void ChangeSpeed()
            + int GetScore()
            # void MoveVertical()
            # void AutoDestroy()
        }

        class NormalCar{
            + tag NormalCar
            - int thisScore
            + void Impact(Vector3 vector)
        }

        class CarA{
    
        }
        class CarB{
    
        }

        class Enemy{
            + tag Enemy
        }

        class Truck{

        }
        class PoliceCar{

        }

        class Rival{
            - float horizontalSpeed
            - void Move()
        }

        class Player{
            - float horizontalSpeed
            - float rotation
            - float horizontalInertia
            - float verticalInertia
            - const float UP_MAX
            - const float DOWN_MAX
            - const float LEFT_MAX
            - const float RIGHT_MAX
            - void MoveHorizontal()
            - void AddScore()
        }
    }


    package Animation <<Frame>>{

        class BaseAnimation{
            # float DESTROY_INTERVAL
            # void Animation()
        }

        class StartAnimation {
            - float animationTimer
            - const float ANIMATION_TIMER_MAX
        }

        class ScoreAnimation{
            - void Move()
        }

        class BombAnimation{
        
        }
        class SmokeAnimation{
        
        }

        class FadeIn{
        
        }
    }

    class Road{
        - float speed
        - void Move()
        - const float 
        + void ChangeSpeed(float speed)
        - void AutoDestroy()
    }

    class SideImage{
        - float speed
        - void Move()
        + void ChangeSpeed(float speed)
        + void ChangeImage(Sprite sprite)
        - void AutoDestroy()
    }


    Car<|-- Player
    Car<|-- NormalCar
    NormalCar<|--CarA
    NormalCar<|--CarB
    Car<|-- Enemy

    Enemy<|-- Truck
    Enemy<|-- PoliceCar
    Enemy<|-- Rival

    BaseAnimation<|--ScoreAnimation
    BaseAnimation<|--BombAnimation
    BaseAnimation<|--SmokeAnimation
    BaseAnimation<|--FadeIn
    BaseAnimation<|--StartAnimation

}

package Result <<Frame>>{
    
}



@enduml